<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cloud.cc.mapper.UserRoleMapper" >
  <resultMap id="BaseResultMap" type="com.cloud.cc.vo.UserRole" >
    <id column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <association property="relation" javaType="com.cloud.cc.vo.Relation">
    	<id column="relation_Id" property="relationId" jdbcType="INTEGER"/>
    	<result column="relation_name" property="relationName" jdbcType="VARCHAR"/>
    	<result column="relation_url" property="relationUrl" jdbcType="VARCHAR"/>
    	<result column="relation_description" property="relationDescription" jdbcType="VARCHAR"/>
    </association>
     <association property="RoleRelation" javaType="com.cloud.cc.vo.RoleRelation">
    	<id column="rl_id" property="rlId" jdbcType="INTEGER"/>
    </association>
  </resultMap>
  <sql id="Base_Column_List" >
    role_id, role_name, parent_id, create_time, description
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from userrole
    where role_id = #{roleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from userrole
    where role_id = #{roleId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cloud.cc.vo.UserRole" >
    insert into userrole (role_id, role_name, parent_id, 
      create_time, description)
    values (#{roleId,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}, #{parentId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{description,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cloud.cc.vo.UserRole" >
    insert into userrole
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="roleName != null" >
        role_name,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="description != null" >
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cloud.cc.vo.UserRole" >
    update userrole
    <set >
      <if test="roleName != null" >
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cloud.cc.vo.UserRole" >
    update userrole
    set role_name = #{roleName,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      description = #{description,jdbcType=VARCHAR}
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
  
  <select id="selectAll" resultMap="BaseResultMap">
  	select * from userRole
  </select>
  
  <select id="selectByUserIdAndRoleId" resultMap="BaseResultMap">
  	select ur.*,r.relation_name,r.relation_url,r.relation_description from 
  	userRole as ur
  	inner join role_relation as rl
  	on ur.role_Id=rl.role_id
  	inner join relation as r
  	on rl.relation_id=r.relation_Id
  	where ur.role_id=#{roleId} and rl.userId=#{userId}
  </select>
  
</mapper>